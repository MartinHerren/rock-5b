From 358a96b0eaa96099e349eb4578726df5b50a4193 Mon Sep 17 00:00:00 2001
From: Eugen Hristev <eugen.hristev@collabora.com>
Date: Thu, 18 May 2023 16:23:48 +0300
Subject: [PATCH 10/28] efi: search for ARM64 rootfs GUID

Currently, U-boot considers bootable only the EFI System Partition
(SD_GPT_ESP).
However it is custom that the boot files are placed under /boot in
a rootfs partition.
This happens e.g. on Debian on ARM64.
To have this partition checked for boot files (distro boot, extlinux boot),
add the ARM64_ROOTFS_GUID (SD_GPT_ROOT_ARM64) to `is_bootable` check
for partitions.
This would allow U-boot to search inside this partition for boot files.

GUIDs taken from spec here:
https://uapi-group.org/specifications/specs/discoverable_partitions_specification/

Signed-off-by: Eugen Hristev <eugen.hristev@collabora.com>
---
 disk/part_efi.c    | 4 ++++
 include/part_efi.h | 4 +++-
 lib/uuid.c         | 1 +
 3 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/disk/part_efi.c b/disk/part_efi.c
index 80a44dc9f0..5d11b4c745 100644
--- a/disk/part_efi.c
+++ b/disk/part_efi.c
@@ -74,6 +74,7 @@ static char *print_efiname(gpt_entry *pte)
 }
 
 static const efi_guid_t system_guid = PARTITION_SYSTEM_GUID;
+static const efi_guid_t arm64_rootfs_guid = PARTITION_ARM64_ROOTFS_GUID;
 
 static int get_bootable(gpt_entry *p)
 {
@@ -81,6 +82,9 @@ static int get_bootable(gpt_entry *p)
 
 	if (!memcmp(&p->partition_type_guid, &system_guid, sizeof(efi_guid_t)))
 		ret |=  PART_EFI_SYSTEM_PARTITION;
+	if (!memcmp(&p->partition_type_guid, &arm64_rootfs_guid,
+		    sizeof(efi_guid_t)))
+		ret |=  PART_BOOTABLE;
 	if (p->attributes.fields.legacy_bios_bootable)
 		ret |=  PART_BOOTABLE;
 	return ret;
diff --git a/include/part_efi.h b/include/part_efi.h
index c68529b4da..73100492ef 100644
--- a/include/part_efi.h
+++ b/include/part_efi.h
@@ -59,7 +59,9 @@
 #define PARTITION_U_BOOT_ENVIRONMENT \
 	EFI_GUID( 0x3de21764, 0x95bd, 0x54bd, \
 		0xa5, 0xc3, 0x4a, 0xbe, 0x78, 0x6f, 0x38, 0xa8)
-
+#define PARTITION_ARM64_ROOTFS_GUID \
+	EFI_GUID( 0xb921b045, 0x1df0, 0x41c3, \
+		0xaf, 0x44, 0x4c, 0x6f, 0x28, 0x0d, 0x3f, 0xae)
 /* linux/include/efi.h */
 typedef u16 efi_char16_t;
 
diff --git a/lib/uuid.c b/lib/uuid.c
index 96e1af3c8b..514751abb7 100644
--- a/lib/uuid.c
+++ b/lib/uuid.c
@@ -93,6 +93,7 @@ static const struct {
 } list_guid[] = {
 #ifdef CONFIG_PARTITION_TYPE_GUID
 	{"system",	PARTITION_SYSTEM_GUID},
+	{"arm64_rootfs",PARTITION_ARM64_ROOTFS_GUID},
 	{"mbr",		LEGACY_MBR_PARTITION_GUID},
 	{"msft",	PARTITION_MSFT_RESERVED_GUID},
 	{"data",	PARTITION_BASIC_DATA_GUID},
-- 
2.39.2

